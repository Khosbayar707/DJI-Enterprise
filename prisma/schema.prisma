generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @unique @default(nanoid())
  email     String   @unique
  password  String
  isAdmin   Boolean  @default(false)
  sub_news  Boolean  @default(false)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  drones    Drone[]
  reviewee  Review[]
  specs     Spec[]
}

model Drone {
  id              String          @id @unique @default(nanoid())
  name            String
  Price           Int?
  description     String          @default("Дэлгэрэнгүй мэдээлэл алга!")
  featuredImageId String?         @unique
  featuredVideoId String?         @unique
  adminId         String
  visible         Boolean         @default(false)
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  modelId         String?
  weight          String          @default("Жин оруулаагүй.")
  discount        Int             @default(0)
  admin           User            @relation(fields: [adminId], references: [id])
  featuredImage   Image?          @relation("DroneFeaturedImage", fields: [featuredImageId], references: [id])
  featuredVideo   Video?          @relation("DroneFeaturedVideo", fields: [featuredVideoId], references: [id])
  model           DroneModel?     @relation(fields: [modelId], references: [id])
  images          Image[]
  reviews         Review[]
  specs           Spec[]
  videos          Video[]         @relation("videos")
  categories      DroneCategory[] @relation("DroneToDroneCategory")
}

model DroneModel {
  id     String  @id @unique @default(nanoid())
  name   String
  drones Drone[]
}

model Spec {
  id             String         @id @unique @default(nanoid())
  name           String
  detail         String
  previewText String @default("")
  descriptions SpecDescription[]
  droneId        String?
  adminId        String
  visible        Boolean        @default(false)
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  discount       Int            @default(0)
  price          Int            @default(0)
  image          Image[]
  admin          User           @relation(fields: [adminId], references: [id])
  drone          Drone?         @relation(fields: [droneId], references: [id])
  specCategories SpecCategory[] @relation("SpecToSpecCategory")
}

model SpecDescription {
  id String @id @unique @default(nanoid())
  highlight String
  description String
  priority Int @default(0)
  spec Spec @relation(references: [id], fields: [specId], onDelete: Cascade)
  specId String
}

model DroneCategory {
  id        String   @id @unique @default(nanoid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  drones    Drone[]  @relation("DroneToDroneCategory")
}

model SpecCategory {
  id        String   @id @unique @default(nanoid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  specs     Spec[]   @relation("SpecToSpecCategory")
}

model Image {
  id                 String   @id @unique @default(nanoid())
  name               String   @default("Нэр өгөөгүй!")
  description        String   @default("Дэлгэрэнгүй мэдээлэл оруулаагүй байна!")
  url                String
  droneId            String?
  specId             String?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  public_id          String
  priority           Int      @default(0)
  DroneFeaturedImage Drone?   @relation("DroneFeaturedImage")
  drone              Drone?   @relation(fields: [droneId], references: [id])
  spec               Spec?    @relation(fields: [specId], references: [id])
}

model Video {
  id                 String   @id @unique @default(nanoid())
  url                String
  droneId            String
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  priority           Int      @default(0)
  public_id          String
  detail             String   @default("Тайлбар алга!")
  name               String   @default("Нэр өгөөгүй!")
  droneFeaturedVideo Drone?   @relation("DroneFeaturedVideo")
  drone              Drone    @relation("videos", fields: [droneId], references: [id])
}

model Review {
  id          String @id @unique @default(nanoid())
  rating      Int
  userId      String
  droneId     String
  description String
  drone       Drone  @relation(fields: [droneId], references: [id], onDelete: Cascade)
  reviewee    User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}
