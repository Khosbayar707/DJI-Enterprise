generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String            @id @unique @default(nanoid())
  email      String            @unique
  password   String
  isAdmin    Boolean           @default(false)
  sub_news   Boolean           @default(false)
  isActive   Boolean           @default(true)
  createdAt  DateTime          @default(now())
  updatedAt  DateTime          @updatedAt
  isVerified Boolean           @default(false)
  drones     Drone[]
  requests   DroneBuyRequest[]
  Otps       OTP[]
  reviewee   Review[]
  specs      Spec[]
}

model DroneBuyRequest {
  id          String   @id @unique @default(nanoid())
  userId      String
  name        String
  phone       Int
  description String?  @default("")
  droneId     String
  resolved    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
  drone       Drone    @relation(fields: [droneId], references: [id])
  user        User     @relation(fields: [userId], references: [id])
}

model ContactRequest {
  id        String   @id @unique @default(nanoid())
  name      String
  email     String
  phone     String
  message   String
  ip        String
  contacted Boolean  @default(false)
  createdAt DateTime @default(now())
}

model InstructionRequest {
  id        String   @id @unique @default(nanoid())
  username  String
  phone     String
  email     String
  ip        String
  resolved  Boolean  @default(false)
  createdAt DateTime @default(now())
}

model OTP {
  id        String   @id @unique @default(nanoid())
  otp       String   @unique
  userId    String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}

model Drone {
  id                 String             @id @unique @default(nanoid())
  name               String
  price              Int                @default(0)
  description        String             @default("Дэлгэрэнгүй мэдээлэл алга!")
  featuredImageId    String?            @unique
  featuredVideoId    String?            @unique
  featured           Boolean            @default(false)
  adminId            String
  visible            Boolean            @default(false)
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt
  modelId            String?
  weight             String             @default("Жин оруулаагүй.")
  discount           Int                @default(0)
  stock              Int                @default(0)
  PreviewDescription String             @default("")
  briefDescription   String             @default("")
  droneType          DroneType          @default(CONSUMER)
  admin              User               @relation(fields: [adminId], references: [id])
  featuredImage      Image?             @relation("DroneFeaturedImage", fields: [featuredImageId], references: [id])
  featuredVideo      Video?             @relation("DroneFeaturedVideo", fields: [featuredVideoId], references: [id])
  model              DroneModel?        @relation(fields: [modelId], references: [id])
  advantages         DroneAdvantage[]
  userRequests       DroneBuyRequest[]
  descriptions       DroneDescription[]
  inTheBox           DroneInTheBox[]
  tech               DroneTech?         @relation("DroneAndDroneTech")
  images             Image[]
  reviews            Review[]
  specs              Spec[]
  videos             Video[]            @relation("videos")
  rtk                rtkModule?
  categories         DroneCategory[]    @relation("DroneToDroneCategory")
}

model rtkModule {
  id               String   @id @unique @default(nanoid())
  title            String
  briefDescription String?
  description      String
  videoId          String   @unique
  droneId          String   @unique
  createdAt        DateTime @default(now())
  drone            Drone    @relation(fields: [droneId], references: [id])
  video            Video    @relation(fields: [videoId], references: [id])
}

model DroneTech {
  id                   String   @id @unique @default(nanoid())
  weight               String   @default("")
  maxSpeed             String   @default("")
  operatingTemperature String   @default("")
  dimensions           String   @default("")
  maxWindResistance    String   @default("")
  Battery              String   @default("")
  droneId              String   @unique
  createdAt            DateTime @default(now())
  drone                Drone    @relation("DroneAndDroneTech", fields: [droneId], references: [id])
}

model DroneInTheBox {
  id        String   @id @unique @default(nanoid())
  name      String
  droneId   String
  createdAt DateTime @default(now())
  drone     Drone    @relation(fields: [droneId], references: [id])
}

model DroneDescription {
  id          String   @id @unique @default(nanoid())
  highlight   String
  description String
  priority    Int      @default(0)
  droneId     String
  createdAt   DateTime @default(now())
  drone       Drone    @relation(fields: [droneId], references: [id], onDelete: Cascade)
}

model DroneAdvantage {
  id        String   @id @unique @default(nanoid())
  detail    String
  createdAt DateTime @default(now())
  droneId   String
  drone     Drone    @relation(fields: [droneId], references: [id])
}

model DroneModel {
  id        String   @id @unique @default(nanoid())
  name      String
  createdAt DateTime @default(now())
  drones    Drone[]
}

model Spec {
  id             String            @id @unique @default(nanoid())
  name           String
  detail         String
  droneId        String?
  adminId        String
  visible        Boolean           @default(false)
  createdAt      DateTime          @default(now())
  updatedAt      DateTime          @updatedAt
  discount       Int               @default(0)
  price          Int               @default(0)
  previewText    String            @default("")
  priority       Int               @default(0)
  image          Image[]
  admin          User              @relation(fields: [adminId], references: [id])
  drone          Drone?            @relation(fields: [droneId], references: [id])
  descriptions   SpecDescription[]
  videos         Video[]
  specCategories SpecCategory[]    @relation("SpecToSpecCategory")
}

model SpecDescription {
  id          String   @id @unique @default(nanoid())
  description String
  specId      String
  highlight   String
  priority    Int      @default(0)
  createdAt   DateTime @default(now())
  spec        Spec     @relation(fields: [specId], references: [id], onDelete: Cascade)
}

model DroneCategory {
  id        String   @id @unique @default(nanoid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  drones    Drone[]  @relation("DroneToDroneCategory")
}

model SpecCategory {
  id        String   @id @unique @default(nanoid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  specs     Spec[]   @relation("SpecToSpecCategory")
}

model Image {
  id                 String           @id @unique @default(nanoid())
  name               String           @default("Нэр өгөөгүй!")
  description        String           @default("Дэлгэрэнгүй мэдээлэл оруулаагүй байна!")
  url                String
  droneId            String?
  specId             String?
  garminId           String?
  createdAt          DateTime         @default(now())
  updatedAt          DateTime         @updatedAt
  public_id          String
  priority           Int              @default(0)
  payloadId          String?
  surveyEquipmentId  String?
  DroneFeaturedImage Drone?           @relation("DroneFeaturedImage")
  drone              Drone?           @relation(fields: [droneId], references: [id], onDelete: Cascade)
  garmins            GarminProduct?   @relation(fields: [garminId], references: [id], onDelete: Cascade)
  payload            DronePayload?    @relation(fields: [payloadId], references: [id], onDelete: Cascade)
  spec               Spec?            @relation(fields: [specId], references: [id], onDelete: Cascade)
  survey             SurveyEquipment? @relation(fields: [surveyEquipmentId], references: [id], onDelete: Cascade)
}

model Video {
  id                 String     @id @unique @default(nanoid())
  url                String
  droneId            String?
  rtkId              String?
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @updatedAt
  priority           Int        @default(0)
  public_id          String
  detail             String     @default("Тайлбар алга!")
  name               String     @default("Нэр өгөөгүй!")
  specId             String?
  droneFeaturedVideo Drone?     @relation("DroneFeaturedVideo")
  drone              Drone?     @relation("videos", fields: [droneId], references: [id], onDelete: Cascade)
  spec               Spec?      @relation(fields: [specId], references: [id], onDelete: Cascade)
  rtk                rtkModule?
}

model Review {
  id          String   @id @unique @default(nanoid())
  rating      Int
  userId      String
  droneId     String
  description String
  createdAt   DateTime @default(now())
  drone       Drone    @relation(fields: [droneId], references: [id], onDelete: Cascade)
  reviewee    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model GarminProduct {
  id             String          @id @default(nanoid())
  name           String
  price          Float
  discountPrice  Float?
  featured       Boolean         @default(false)
  description    String
  features       String[]
  isNew          Boolean         @default(false)
  rating         Float
  reviewCount    Int             @default(0)
  inStock        Boolean         @default(true)
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  type           ProductType
  images         Image[]
  specifications Specification[]

  @@index([name])
}

model Specification {
  id        String        @id @default(nanoid())
  label     String
  value     String
  productId String
  product   GarminProduct @relation(fields: [productId], references: [id])
}

model DronePayload {
  id          String      @id @default(nanoid())
  name        String
  type        PayloadType
  description String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  features    String[]
  price       Float
  images      Image[]
}

model SurveyEquipment {
  id             String        @id @default(nanoid())
  name           String
  type           EquipmentType
  brand          String?
  price          Float
  description    String
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  features       String[]
  images         Image[]
  specifications SurveySpec[]

  @@index([name])
}

model SurveySpec {
  id          String          @id @default(nanoid())
  label       String
  value       String
  equipmentId String
  equipment   SurveyEquipment @relation(fields: [equipmentId], references: [id], onDelete: Cascade)
}

enum ProductType {
  SMARTWATCH
  GPS
}

enum PayloadType {
  ZENMUSE
  LIDAR
  SPEAKER
  SPOTLIGHT
  TETHER
  OTHER
  PROGRAM
  PAYLOAD_AND_CAMERA
}

enum DroneType {
  CONSUMER
  AGRICULTURE
  ENTERPRISE
}

enum EquipmentType {
  GNSS
  TOTAL_STATION
  THEODOLITE
  AUTO_LEVEL
}
